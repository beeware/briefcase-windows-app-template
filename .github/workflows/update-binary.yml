name: Update binary
on:
  push:
    tags:
    - '*-b*'

defaults:
  run:
    shell: bash

jobs:
  build-stubs:
    name: Build stub binaries
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    steps:
    - name: Set Build Variables
      env:
        TAG_NAME: ${{ github.ref }}
      run: |
        export TAG=$(basename $TAG_NAME)
        export PYTHON_TAG=$(python -c "print('.'.join('${{ matrix.python-version }}'.split('.')[:2]))")
        export BRIEFCASE_VERSION="${TAG%-*}"
        export BUILD_NUMBER="${TAG#*-}"

        echo "TAG=${TAG}" | tee -a $GITHUB_ENV
        echo "PYTHON_TAG=${PYTHON_TAG}" | tee -a $GITHUB_ENV
        echo "BRIEFCASE_VERSION=${BRIEFCASE_VERSION}" | tee -a $GITHUB_ENV
        echo "BUILD_NUMBER=${BUILD_NUMBER}" | tee -a $GITHUB_ENV

    - name: Checkout Template
      uses: actions/checkout@v4.1.4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.1.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        if [ "${{ env.BRIEFCASE_VERSION }}" == "dev" ]; then
          # We're on the development template; use development Briefcase
          python -m pip install git+https://github.com/beeware/briefcase.git
        else
          python -m pip install briefcase==${{ env.BRIEFCASE_VERSION }}
        fi

    - name: Generate VisualStudio Stub App
      run: |
        # Generate the stub app
        cd stub
        briefcase build windows visualstudio
        echo "Move the binaries into the final location"
        mv ./build/console-stub/windows/visualstudio/x64/Release/console-stub.exe ./Console-Stub-${{ env.PYTHON_TAG }}.exe
        mv "./build/gui-stub/windows/visualstudio/x64/Release/GUI stub.exe" ./GUI-Stub-${{ env.PYTHON_TAG }}.exe

    - name: Upload Stub Artefact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: stub-${{ matrix.python-version }}
        path: stub/*-Stub-${{ env.PYTHON_TAG }}.exe

  commit-stubs:
    name: Commit Stub Binaries
    needs: build-stubs
    runs-on: windows-latest
    steps:
    - name: Set Build Variables
      env:
        TAG_NAME: ${{ github.ref }}
      run: |
        export TAG=$(basename $TAG_NAME)
        export BRIEFCASE_VERSION="${TAG%-*}"
        export BUILD_NUMBER="${TAG#*-}"

        echo "TAG=${TAG}" | tee -a $GITHUB_ENV
        echo "BRIEFCASE_VERSION=${BRIEFCASE_VERSION}" | tee -a $GITHUB_ENV
        echo "BUILD_NUMBER=${BUILD_NUMBER}" | tee -a $GITHUB_ENV

        if [ "${BRIEFCASE_VERSION}" == "dev" ]; then
          # We're on the development template; push to main
          echo "TEMPLATE_BRANCH=main" | tee -a $GITHUB_ENV
        else
          echo "TEMPLATE_BRANCH=v${BRIEFCASE_VERSION}" | tee -a $GITHUB_ENV
        fi

    - name: Checkout Template
      uses: actions/checkout@v4.1.4

    - name: Download Stub Artefacts
      uses: actions/download-artifact@v4.1.7
      with:
        pattern: stub-*
        path: stub
        merge-multiple: true

    - name: Commit Stubs
      run: |
        git config user.email "brutus@beeware.org"
        git config user.name "Brutus (robot)"
        # Move the binaries into their final location
        mv stub/*-Stub-* "{{ cookiecutter.format }}/src"
        git add "{{ cookiecutter.format }}/src"
        git commit -m "AUTO: Update app binaries; build ${{ env.TAG }}"
        git push origin HEAD:${{ env.TEMPLATE_BRANCH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
