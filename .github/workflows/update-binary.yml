name: Update binary
on:
  push:
    tags:
    - '*-b*'

defaults:
  run:
    shell: bash

jobs:
  build-stubs:
    name: Build stub binaries
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    steps:
    - name: Set build variables
      env:
        TAG_NAME: ${{ github.ref }}
      run: |
        export TAG=$(basename $TAG_NAME)
        export PYTHON_TAG=$(python -c "print('.'.join('${{ matrix.python-version }}'.split('.')[:2]))")
        export BRIEFCASE_VERSION="${TAG%-*}"
        export BUILD_NUMBER="${TAG#*-}"

        echo "TAG=${TAG}"
        echo "PYTHON_TAG=${PYTHON_TAG}"
        echo "BRIEFCASE_VERSION=${BRIEFCASE_VERSION}"
        echo "BUILD_NUMBER=${BUILD_NUMBER}"

        echo "TAG=${TAG}" >> $GITHUB_ENV
        echo "PYTHON_TAG=${PYTHON_TAG}" >> $GITHUB_ENV
        echo "BRIEFCASE_VERSION=${BRIEFCASE_VERSION}" >> $GITHUB_ENV
        echo "BUILD_NUMBER=${BUILD_NUMBER}" >> $GITHUB_ENV
    - name: Checkout template
      uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.7.1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ "${{ env.BRIEFCASE_VERSION }}" == "dev" ]; then
          # We're on the development template; use development Briefcase
          python -m pip install git+https://github.com/beeware/briefcase.git
        else
          python -m pip install briefcase==${{ env.BRIEFCASE_VERSION }}
        fi
    - name: Generate VisualStudio stub app
      run: |
        # Generate the stub app
        cd stub
        briefcase build windows visualstudio
        echo "Move the binary into the final location"
        mv ./build/stub/windows/visualstudio/x64/Release/Stub.exe ./Stub-${{ env.PYTHON_TAG }}.exe
    - name: Upload Stub artefact
      uses: actions/upload-artifact@v3
      with:
        name: stubs
        path: stub/Stub-${{ env.PYTHON_TAG }}.exe

  commit-stubs:
    name: Commit stub binaries
    needs: build-stubs
    runs-on: windows-latest
    steps:
    - name: Set build variables
      env:
        TAG_NAME: ${{ github.ref }}
      run: |
        export TAG=$(basename $TAG_NAME)
        export BRIEFCASE_VERSION="${TAG%-*}"
        export BUILD_NUMBER="${TAG#*-}"

        echo "TAG=${TAG}"
        echo "PYTHON_TAG=${PYTHON_TAG}"
        echo "BRIEFCASE_VERSION=${BRIEFCASE_VERSION}"
        echo "BUILD_NUMBER=${BUILD_NUMBER}"

        echo "TAG=${TAG}" >> $GITHUB_ENV
        echo "PYTHON_TAG=${PYTHON_TAG}" >> $GITHUB_ENV
        echo "BRIEFCASE_VERSION=${BRIEFCASE_VERSION}" >> $GITHUB_ENV
        echo "BUILD_NUMBER=${BUILD_NUMBER}" >> $GITHUB_ENV

        if [ "${BRIEFCASE_VERSION}" == "dev" ]; then
          # We're on the development template; push to main
          echo "TEMPLATE_BRANCH=main"
          echo "TEMPLATE_BRANCH=main" >> $GITHUB_ENV
        else
          echo "TEMPLATE_BRANCH=v${BRIEFCASE_VERSION}"
          echo "TEMPLATE_BRANCH=v${BRIEFCASE_VERSION}" >> $GITHUB_ENV
        fi
    - name: Checkout template
      uses: actions/checkout@v4
    - name: Download Stub artefacts
      uses: actions/download-artifact@v3
      with:
        name: stubs
        path: stub
    - name: Commit stubs
      run: |
        git config user.email "brutus@beeware.org"
        git config user.name "Brutus (robot)"
        # Move the binary into it's final location
        mv stub/Stub-* "{{ cookiecutter.format }}/src"
        git add "{{ cookiecutter.format }}/src"
        git commit -m "AUTO: Update app binaries; build ${{ env.TAG }}"
        git push origin HEAD:${{ env.TEMPLATE_BRANCH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
