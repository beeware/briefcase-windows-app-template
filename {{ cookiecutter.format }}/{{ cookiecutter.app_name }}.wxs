<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs"
     xmlns:ui="http://wixtoolset.org/schemas/v4/wxs/ui">
    <Package
        UpgradeCode="{{ cookiecutter.guid }}"
        Name="{{ cookiecutter.formal_name|xml_escape }}"
        Version="{{ cookiecutter.version_triple }}"
        Manufacturer="{{ (cookiecutter.author or 'Anonymous')|xml_escape }}"
        Language="1033"
        Scope="{{ 'perUserOrMachine' if 'User' in cookiecutter.install_scope else 'perMachine' }}">
        <!-- See scope comments below -->

        <Media Id="1" Cabinet="product.cab" EmbedCab="yes" />

        <Icon Id="ProductIcon" SourceFile="icon.ico" />

        <!-- Add/Remove Programs settings -->
        <Property Id="ARPPRODUCTICON" Value="ProductIcon" />
        {% if cookiecutter.url -%}
        <Property Id="ARPURLINFOABOUT" Value="{{ cookiecutter.url|xml_escape }}" />
        {% endif -%}
        {% if cookiecutter.author_email -%}
        <Property Id="ARPCONTACT" Value="{{ cookiecutter.author_email }}" />
        {% endif -%}
        <Property Id="ARPNOREPAIR" Value="1" />
        <Property Id="ARPNOMODIFY" Value="1" />

        <!-- If we ever add the InstallDirDlg, it will use this property to control the
        target directory. The value must be upper case to make it a public property
        that will be passed to the execution phase. And since WiX will create a default
        INSTALLFOLDER directory under certain circumstances, let's override that with
        our own definition to avoid confusion. -->
        <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />

        <!-- This is either the per-user or the per-machine Program Files folder,
        depending on the values of the ALLUSERS and MSIINSTALLPERUSER properties. -->
        <StandardDirectory Id="ProgramFiles64Folder">
            {%- if cookiecutter.use_full_install_path %}
            <Directory Name="{{ (cookiecutter.author or 'Unknown Developer')|xml_escape }}">
            {%- endif %}
            <Directory Id="INSTALLFOLDER" Name="{{ cookiecutter.formal_name|xml_escape }}" />
            {%- if cookiecutter.use_full_install_path %}
            </Directory>
            {%- endif %}
        </StandardDirectory>

        <ComponentGroup Id="{{ cookiecutter.module_name }}_COMPONENTS">
            <!-- "\\?\" enables long paths (https://github.com/wixtoolset/issues/issues/9115). -->
            <Files
                Directory="INSTALLFOLDER"
                Include="\\?\{{ cookiecutter.package_path|xml_escape }}\**" />
            <Files
                Directory="INSTALLFOLDER"
                Include=".\extras\**" />
        </ComponentGroup>

        <StandardDirectory Id="ProgramMenuFolder">
            <Directory Id="ProgramMenuSubfolder" Name="{{ cookiecutter.formal_name|xml_escape }}">
                <Component Id="ApplicationShortcuts">
                    <Shortcut
                        Id="ApplicationShortcut1"
                        Name="{{ cookiecutter.formal_name|xml_escape }}"
                        Icon="ProductIcon"
                        Description="{{ cookiecutter.description | truncate(256, False) }}"
                        Target="[INSTALLFOLDER]{{ cookiecutter.binary_path }}" />
                    <RegistryValue
                        Root="HKMU"
                        Key="Software\{{ (cookiecutter.author or 'Unknown Developer')|xml_escape }}\{{ cookiecutter.formal_name|xml_escape }}"
                        Name="installed"
                        Type="integer"
                        Value="1"
                        KeyPath="yes" />
                    <RemoveFolder Id="ProgramMenuSubfolder" On="uninstall" />
                </Component>
            </Directory>
        </StandardDirectory>

        {% if cookiecutter.document_types -%}
        <SetProperty
            Id="FileAssociationProperty"
            Value="[INSTALLFOLDER]{{ cookiecutter.binary_path }}"
            After="CostFinalize" />

        {% for document_type_id, document_type in cookiecutter.document_types|dictsort -%}
        <Component
            Id="FileAssociation.{{ document_type_id }}"
            Directory="INSTALLFOLDER">
            <File
                Id="ProductIcon.{{ document_type_id|xml_escape }}"
                Source="{{ cookiecutter.app_name }}-{{ document_type_id|xml_escape }}.ico" />
            <ProgId
                Id="{{ cookiecutter.bundle }}.{{ cookiecutter.app_name }}.{{ document_type_id|xml_escape }}"
                Description="{{ document_type.description|xml_escape }}"
                Icon="ProductIcon.{{ document_type_id }}">
                <Extension
                    Id="{{ document_type.extension }}"
                    ContentType="{% if document_type.get('mime_type') %}{{ document_type.mime_type|xml_escape }}{% else %}application/x-{{ cookiecutter.app_name }}-{{ document_type_id }}{% endif %}">
                    <Verb
                        Id="open"
                        Command="Open"
                        TargetProperty="FileAssociationProperty"
                        Argument='"%1"' />
                </Extension>
            </ProgId>
        </Component>
        {%- endfor %}
        {%- endif %}

        <Feature
            Id="DefaultFeature"
            Title="{{ cookiecutter.formal_name|xml_escape }}"
            Description="Required application files"
            Display="expand"
        >
            <ComponentGroupRef Id="{{ cookiecutter.module_name }}_COMPONENTS" />
            <ComponentRef Id="ApplicationShortcuts" />
            {%- for document_type_id in cookiecutter.document_types.keys()|sort %}
            <ComponentRef Id="FileAssociation.{{ document_type_id }}" />
            {%- endfor %}

            <!--
                Features provide the mechanism to visually select options in the install.

                AllowAdvertise is a (rarely used) feature of MSI, which allows a
                feature to installed-on-use. We turn this off across the board.

                Level=1 means "enabled" as an initial value, 1000 means "disabled"

                To disable network installs, each feature needs a dummy component that
                is declared as being installed locally.
            -->
            {% for name, install_option in cookiecutter.install_options.items() %}
            <Feature Id="FEATURE_{{ name.upper() }}"
                Title="{{ install_option.title|xml_escape }}"
                Description="{{ install_option.description|xml_escape }}"
                AllowAdvertise="no"
                Level="{% if install_option.default %}1{% else %}1000{% endif %}">
                <Component
                    Id="Component_FEATURE_{{ name.upper() }}"
                    Location="local"
                    Directory="TARGETDIR"
                    Guid="{{ '.'.join(['feature-' + name, cookiecutter.app_name] + cookiecutter.bundle.split('.')[::-1])|dns_uuid5 }}"/>
            </Feature>
            {% endfor %}
        </Feature>

        <!-- Custom user properties

          The OPTION_X property definition describes a value that can be set;
          the FEATURE_X feature is used to control the feature in the GUI.

          The initial value of OPTION_X is always 0. If the corresponding
          FEATURE_X is set to "3" (for "local install") by the UI, that is
          converted to an enabled value in OPTION_X in the cost finalization
          phase.
          -->
        {% for name, install_option in cookiecutter.install_options.items() %}
        <Property Id="OPTION_{{ name.upper() }}" Value="0"/>
        <SetProperty
            Id="OPTION_{{ name.upper() }}"
            Value="1"
            After="CostFinalize"
            Sequence="execute"
            Condition="&amp;FEATURE_{{ name.upper() }} = 3" />
        {% endfor %}

        <!--
          The ALLUSERS variable has to have a value of "" or 1; we need a
          value of 0 or 1 for option output purposes.
          -->
        <Property Id="OPTION_ALLUSERS" Value="0"/>
        <SetProperty
            Id="OPTION_ALLUSERS"
            Value="1"
            After="CostFinalize"
            Sequence="execute"
            Condition="ALLUSERS = 1" />

        {% if cookiecutter.console_app %}
        <!-- If a Level evaluates to 0 at the start of either the UI or the execution
        phase, then the feature cannot be re-enabled by any means, not even the ADDLOCAL
        property or the AddLocal event. So the Level conditions check 2 properties:

        * ALLUSERS (see scope comments) enables one feature in non-interactive or
          fixed-scope installs.
        * UILevel enables both features in interactive, configurable-scope installs.
          The InstallScopeDlg will then disable the one the user doesn't select. -->
        {% set ui_condition = (
            "OR UILevel &gt;= 5"
            if cookiecutter.install_scope == "perUserOrMachine"
            else ""
        ) %}

        <Feature
            Id="UserPathEnvFeature"
            Level="0"
            Title="User PATH modifications"
            Description="Add the application to the user's PATH"
            Display="hidden"
        >
            <Level Condition="NOT ALLUSERS {{ ui_condition }}" Value="1" />
            <Component
                Id="UserPathEnvComponent"
                Guid="{{ '.'.join(['system-path', cookiecutter.app_name] + cookiecutter.bundle.split('.')[::-1])|dns_uuid5 }}">
                <Environment
                    System="no"
                    Name="PATH"
                    Action="set"
                    Part="first"
                    Value="[INSTALLFOLDER]" />
            </Component>
        </Feature>

        <Feature
            Id="MachinePathEnvFeature"
            Level="0"
            Title="System PATH modifications"
            Description="Add the application to the system PATH"
            Display="hidden"
        >
            <Level Condition="ALLUSERS {{ ui_condition }}" Value="1" />
            <Component
                Id="MachinePathEnvComponent"
                Guid="{{ '.'.join(['user-path', cookiecutter.app_name] + cookiecutter.bundle.split('.')[::-1])|dns_uuid5 }}">
                <Environment
                    System="yes"
                    Name="PATH"
                    Action="set"
                    Part="first"
                    Value="[INSTALLFOLDER]" />
            </Component>
        </Feature>
        {% endif %}

        <!-- UI features are documented at:

           https://docs.firegiant.com/wix/tools/wixext/wixui/,

        and implemented in the WiX source code:

           https://github.com/wixtoolset/wix/tree/v6.0.0/src/ext/UI/wixlib

        We implement our own UI flow by linking together individual dialogs. There are
        some pre-defined UI flows such as WixUI_Advanced, but they don't allow much
        customization, and they have some bugs, e.g.
        https://github.com/wixtoolset/issues/issues/5908. -->

        <!-- Enable the radio buttons in InstallScopeDlg, and set the default value -->
        <WixVariable Id="WixUISupportPerUser" Value="1" />
        <WixVariable Id="WixUISupportPerMachine" Value="1" />
        <Property Id="WixAppFolder" Value="WixPerUserFolder" />

        <!-- Customize the images in the installer -->
        <!-- <WixVariable Id="WixUIBannerBMP" Value="wix-banner-493x58.bmp" /> -->
        <!-- <WixVariable Id="WixUIDialogBMP" Value="wix-dialog-493x312.bmp" /> -->

        <!-- Define the license text-->
        <WixVariable Id="WixUILicenseRtf" Value="LICENSE.rtf" />

        <UI>
            <!-- Include the common WixUI resources-->
            <UIRef Id="WixUI_Common" />

            <!-- Include translations for error text (see https://stackoverflow.com/questions/44161526) -->
            <UIRef Id="WixUI_ErrorProgressText" />

            <!-- Include all TextStyles from WixUI_Advanced -->
            <TextStyle
                Id="WixUI_Font_Normal"
                FaceName="!(loc.Advanced_Font_FaceName)"
                Size="!(loc.Advanced_Font_Normal_Size)" />
            <TextStyle
                Id="WixUI_Font_Bigger"
                FaceName="!(loc.Advanced_Font_FaceName)"
                Size="!(loc.Advanced_Font_Bigger_Size)" />
            <TextStyle
                Id="WixUI_Font_Title"
                FaceName="!(loc.Advanced_Font_FaceName)"
                Size="!(loc.Advanced_Font_Title_Size)"
                Bold="yes" />
            <TextStyle
                Id="WixUI_Font_Emphasized"
                FaceName="!(loc.Advanced_Font_FaceName)"
                Size="!(loc.Advanced_Font_Emphasized_Size)"
                Bold="yes" />
            <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />

            <!-- Define the custom Install Options dialog
                 This is a customized version of the CustomizeDlg:

                 https://github.com/wixtoolset/wix/blob/v6.0.0/src/ext/UI/wixlib/CustomizeDlg.wxs

                 with the component size and location selection parts removed.
            -->
            <Dialog
                Id="InstallOptionsDlg"
                Width="370" Height="270"
                Title="!(loc.CustomizeDlg_Title)"
                TrackDiskSpace="no"
            >
                <Control
                    Id="Tree"
                    Type="SelectionTree"
                    X="25" Y="85"
                    Width="175" Height="135"
                    Property="_BrowseProperty"
                    Sunken="yes"
                    TabSkip="no"
                    Text="!(loc.CustomizeDlgTree)" />
                <Control
                    Id="Reset"
                    Type="PushButton"
                    X="10" Y="243"
                    Width="81" Height="17"
                    Text="!(loc.CustomizeDlgReset)"
                >
                    <Publish Event="Reset" Value="0" />
                    <Subscribe Event="SelectionNoItems" Attribute="Enabled" />
                </Control>

                <Control
                    Id="Back"
                    Type="PushButton"
                    X="192" Y="243"
                    Width="56" Height="17"
                    Text="!(loc.WixUIBack)"
                />
                <Control
                    Id="Next"
                    Type="PushButton"
                    X="248" Y="243"
                    Width="56" Height="17"
                    Default="yes"
                    Text="!(loc.WixUINext)"
                >
                    <Subscribe Event="SelectionNoItems" Attribute="Enabled" />
                </Control>
                <Control
                    Id="Cancel"
                    Type="PushButton"
                    X="304" Y="243"
                    Width="56" Height="17"
                    Cancel="yes"
                    Text="!(loc.WixUICancel)"
                >
                    <Publish Event="SpawnDialog" Value="CancelDlg" />
                </Control>
                <Control
                    Id="BannerBitmap"
                    Type="Bitmap"
                    X="0" Y="0"
                    Width="370" Height="44"
                    TabSkip="no"
                    Text="!(loc.CustomizeDlgBannerBitmap)" />
                <Control
                    Id="Text"
                    Type="Text"
                    X="25" Y="55"
                    Width="320" Height="20"
                    Text="!(loc.CustomizeDlgText)" />
                <Control
                    Id="BannerLine"
                    Type="Line"
                    X="0" Y="44"
                    Width="373" Height="0" />
                <Control
                    Id="BottomLine"
                    Type="Line"
                    X="0" Y="234"
                    Width="373" Height="0" />
                <Control
                    Id="Description"
                    Type="Text"
                    X="25" Y="23"
                    Width="280" Height="15"
                    Transparent="yes"
                    NoPrefix="yes"
                    Text="!(loc.CustomizeDlgDescription)" />
                <Control
                    Id="Title"
                    Type="Text"
                    X="15" Y="6"
                    Width="210" Height="15"
                    Transparent="yes"
                    NoPrefix="yes"
                    Text="!(loc.CustomizeDlgTitle)" />
                <Control
                    Id="Box"
                    Type="GroupBox"
                    X="210" Y="81"
                    Width="150" Height="138" />
                <Control
                    Id="ItemDescription"
                    Type="Text"
                    X="215" Y="90"
                    Width="131" Height="100"
                    Text="!(loc.CustomizeDlgItemDescription)"
                >
                    <Subscribe Event="SelectionDescription" Attribute="Text" />
                </Control>
            </Dialog>

            <!-- Define the workflow through the dialogs.

            The general workflow is:
             * Welcome
             * License
             * (optional) Install Scope (see notes below)
             * (optional) Install options
             * Verify Ready
             * Exit

            Scope handling has to work within the following constraints, some of
            which are documented, and some not
            (https://learn.microsoft.com/en-us/windows/win32/msi/single-package-authoring):

            * If ALLUSERS="" or 1, then:
              * Whether elevation is required depends on the "Word Count Summary".
              * Some folders are affected by the choice of "" or 1, but ProgramFiles
                folders will always point at the per-machine location.
              * MSIINSTALLPERUSER has no effect during startup.

            * If ALLUSERS=2 and MSIINSTALLPERUSER=1, then:
              * Elevation will not be required.
              * ProgramFiles folders will point at the per-user location.
              * If either phase is started with these values, then ALLUSERS will be
                changed to "" before running any actions. However, if the UI phase ends
                and both properties still have the same values (ALLUSERS="",
                MSIINSTALLPERUSER=1), then it will reset ALLUSERS=2 before invoking the
                execution phase.

            * Properties that depend on a ProgramFiles folder are immediately
              re-evaluated in the following circumstances. This will be important for
              the InstallDirDlg, if we ever add it:
              * Setting ALLUSERS=1 sets the per-machine location.
              * Setting ALLUSERS="", MSIINSTALLPERUSER=1, in that order, sets the
                per-user location.

            * Most standard actions, such as FindRelatedProducts, interpret ALLUSERS=""
              as per-user scope, and any other value as per-machine scope.

            Based on this, our UI phase sets the properties to one of two states:
              * Per-user: ALLUSERS="", MSIINSTALLPERUSER=1
              * Per machine: ALLUSERS=1, MSIINSTALLPERUSER="" -->

            <!-- Initial welcome dialog -->
            <Publish
                Dialog="WelcomeDlg"
                Control="Next"
                Event="NewDialog"
                Value="LicenseAgreementDlg" />

            <!-- License agreement -->
            <Publish
                Dialog="LicenseAgreementDlg"
                Control="Back"
                Event="NewDialog"
                Value="WelcomeDlg" />

            {% if cookiecutter.install_scope != "perUserOrMachine" %}
            <!-- The scope is pre-determined, and the properties have already been set
            to the correct values by the <Package> Scope attribute. -->
                {% if cookiecutter.install_options %}
            <Publish
                Dialog="LicenseAgreementDlg"
                Control="Next"
                Event="NewDialog"
                Value="InstallOptionDlg"
                Condition='LicenseAccepted = "1"'/>

            <!-- Install Options -->
            <Publish
                Dialog="InstallOptionsDlg"
                Control="Back"
                Event="NewDialog"
                Value="InstallScopeDlg" />
            <Publish
                Dialog="InstallOptionsDlg"
                Control="Next"
                Event="NewDialog"
                Value="VerifyReadyDlg" />

            <!-- Verify -->
            <Publish
                Dialog="VerifyReadyDlg"
                Control="Back"
                Event="NewDialog"
                Value="InstallOptionsDlg"
                Order="1" />
                {% else %}
            <Publish
                Dialog="LicenseAgreementDlg"
                Control="Next"
                Event="NewDialog"
                Value="VerifyReadyDlg"
                Condition='LicenseAccepted = "1"'/>

            <!-- Verify -->
            <Publish
                Dialog="VerifyReadyDlg"
                Control="Back"
                Event="NewDialog"
                Value="InstallOptionsDlg"
                Order="1" />
                {% endif %}
            {% else %}
            <!-- Let the user choose the scope. -->

            <Publish
                Dialog="LicenseAgreementDlg"
                Control="Next"
                Event="NewDialog"
                Value="InstallScopeDlg"
                Condition='LicenseAccepted = "1"'/>

            <!-- Per-user scope. Although this is the default, we still need code to set
            it, because if we add more dialogs it will become possible to go back and
            change the setting. -->
            <Publish Dialog="InstallScopeDlg"
                Control="Next"
                Order="1"
                Condition='WixAppFolder = "WixPerUserFolder"'
                Property="ALLUSERS"
                Value="{}" />
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="2"
                Condition='WixAppFolder = "WixPerUserFolder"'
                Property="MSIINSTALLPERUSER"
                Value="1" />
                {% if cookiecutter.console_app %}
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="3"
                Condition='WixAppFolder = "WixPerUserFolder"'
                Event="AddLocal"
                Value="UserPathEnvFeature" />
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="4"
                Condition='WixAppFolder = "WixPerUserFolder"'
                Event="Remove"
                Value="MachinePathEnvFeature" />
                {% endif %}

            <!-- Per-machine scope -->
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="11"
                Condition='WixAppFolder = "WixPerMachineFolder"'
                Property="ALLUSERS"
                Value="1" />
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="12"
                Condition='WixAppFolder = "WixPerMachineFolder"'
                Property="MSIINSTALLPERUSER"
                Value="{}" />
                {% if cookiecutter.console_app %}
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="13"
                Condition='WixAppFolder = "WixPerMachineFolder"'
                Event="AddLocal"
                Value="MachinePathEnvFeature" />
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="14"
                Condition='WixAppFolder = "WixPerMachineFolder"'
                Event="Remove"
                Value="UserPathEnvFeature" />
                {% endif %}

            <!-- Install scope -->
            <Publish
                Dialog="InstallScopeDlg"
                Control="Back"
                Event="NewDialog"
                Value="LicenseAgreementDlg" />

                {% if cookiecutter.install_options %}
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Event="NewDialog"
                Value="InstallOptionsDlg"
                Order="99"/>

            <!-- Install Options -->
            <Publish
                Dialog="InstallOptionsDlg"
                Control="Back"
                Event="NewDialog"
                Value="InstallScopeDlg" />
            <Publish
                Dialog="InstallOptionsDlg"
                Control="Next"
                Event="NewDialog"
                Value="VerifyReadyDlg" />

            <!-- Verify -->
            <Publish
                Dialog="VerifyReadyDlg"
                Control="Back"
                Event="NewDialog"
                Value="InstallOptionsDlg"
                Order="1" />
                {% else %}
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Event="NewDialog"
                Value="VerifyReadyDlg"
                Order="99"/>

            <!-- Verify -->
            <Publish
                Dialog="VerifyReadyDlg"
                Control="Back"
                Event="NewDialog"
                Value="InstallScopeDlg"
                Order="1" />
                {% endif %}
            {% endif %}

            <!-- Install complete -->
            <Publish
                Dialog="ExitDialog"
                Control="Finish"
                Event="EndDialog"
                Value="Return"
                Order="99" />
        </UI>

        {% if cookiecutter.post_install_script %}
        <!-- Post-install and Pre-uninstall scripts -->
        <CustomAction
            Id="PostInstallAction"
            Directory="INSTALLFOLDER"
            ExeCommand="[SystemFolder]cmd.exe /c &quot;[INSTALLFOLDER]{{ cookiecutter.installer_path }}\_run_post_install.bat&quot; [OPTION_ALLUSERS]{% for name in cookiecutter.install_options %} [OPTION_{{ name.upper() }}]{% endfor %}"
            Execute="immediate"
            Return="check"
            Impersonate="no"/>
        {% endif %}
        {% if cookiecutter.pre_uninstall_script %}
        <CustomAction
            Id="PreUninstallAction"
            Directory="INSTALLFOLDER"
            ExeCommand="[SystemFolder]cmd.exe /c &quot;[INSTALLFOLDER]{{ cookiecutter.installer_path }}\_run_pre_uninstall.bat&quot;"
            Execute="immediate"
            Return="check"
            Impersonate="no"/>
        {% endif %}
        <InstallExecuteSequence>
        {% if cookiecutter.post_install_script %}
            <Custom Action="PostInstallAction" After="InstallFinalize" Condition="NOT Installed" />
        {% endif %}
        {% if cookiecutter.pre_uninstall_script %}
            <Custom Action="PreUninstallAction" After="InstallInitialize" Condition='REMOVE="ALL"'/>
        {% endif %}
        </InstallExecuteSequence>
    </Package>
</Wix>
